{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccacarr/Desktop/course_work/strangers_things/src/post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BaseUrl } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeletePost(post_id, token) {\n  fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n}\n\n_c = DeletePost;\n\nconst SendMessage = ({\n  setCurrentMessage,\n  currentMessage\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Message: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setCurrentMessage(e.target.value);\n          e.target.value = currentMessage;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = SendMessage;\n\nconst Post = ({\n  element,\n  token\n}) => {\n  _s();\n\n  const [openM, setOpenM] = useState(false);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", element.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), \" \", element.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Location: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this), \" \", element.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Will Deliver: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this), element.willDeliver ? \"yes\" : \"no\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), element.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), element.isAuthor ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Messages: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), element.messages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"message here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 67\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          DeletePost(element._id, token);\n        },\n        children: \"Delete Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }, this) : null, !element.isAuthor && token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setOpenM(true);\n        },\n        children: \"Send Message to Poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 45\n    }, this) : null, openM ? /*#__PURE__*/_jsxDEV(SendMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"NF9F32cll2weFDQsUku1pkl/ezc=\");\n\n_c3 = Post;\nexport default Post;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DeletePost\");\n$RefreshReg$(_c2, \"SendMessage\");\n$RefreshReg$(_c3, \"Post\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/post.js"],"names":["React","useState","BaseUrl","DeletePost","post_id","token","fetch","method","headers","then","response","json","result","console","log","catch","error","SendMessage","setCurrentMessage","currentMessage","e","target","value","Post","element","openM","setOpenM","title","price","location","willDeliver","description","isAuthor","messages","map","message","index","_id"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { BaseUrl } from './constants';\n\nfunction DeletePost(post_id, token)\n{\n    fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    }\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nconst SendMessage = ({setCurrentMessage, currentMessage}) => {\n    return(\n        <form>\n            <div>\n                <label> Message: </label>\n                <input type = \"text\" onChange = {(e) => {setCurrentMessage(e.target.value);\n                    e.target.value = currentMessage;}}/>\n            </div>\n            <input type = \"submit\"/>\n        </form>\n    )\n}\n\nconst Post = ({element, token}) =>{\n    const [openM, setOpenM] = useState(false);\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    return(\n        <div className = \"post\" > \n            <h1> {element.title}</h1>\n            <p> <b>Price: </b> {element.price}</p>\n            <p><b>Location: </b> {element.location}</p>\n            <p><b>Will Deliver: </b>{element.willDeliver ? \"yes\" : \"no\"}</p>\n            <p> <b>Description: </b>{element.description}</p>\n            {element.isAuthor ? <div> \n                <p><b>Messages: </b></p>\n                {element.messages.map((message, index) => {return(<div>message here</div>)})}\n                <button onClick = {() =>{\n                    DeletePost(element._id,token);\n                }}>Delete Post </button>\n            </div> : null}\n            {(!element.isAuthor && token) ? <div>\n                <button onClick = {() => {\n                    setOpenM(true);\n                }}>Send Message to Poster</button>\n            </div>:null}\n            {openM ? <SendMessage /> : null}\n        </div>\n    )\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}