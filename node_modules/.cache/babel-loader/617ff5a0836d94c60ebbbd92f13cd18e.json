{"ast":null,"code":"import{BaseUrl}from\"./constants\";function getUserName(token,setUsername){fetch(BaseUrl+'/test/me',{headers:{'Content-Type':'application/json','Authorization':'Bearer '+token}}).then(function(response){return response.json();}).then(function(result){setUsername(result.data.user.username);}).catch(console.error);}function getPosts(setPosts,token,setPostsToDisplay){fetch(BaseUrl+'/posts',{headers:{'Content-Type':'application/json','Authorization':'Bearer '+token}}).then(function(response){return response.json();}).then(function(result){setPosts(result.data.posts);setPostsToDisplay(result.data.posts);console.log(result.data.posts);}).catch(console.error);}function DeletePost(post_id,token,setPosts,setPostsToDisplay){fetch(BaseUrl+'/posts/'+post_id,{method:\"DELETE\",headers:{'Content-Type':'application/json','Authorization':'Bearer '+token}}).then(function(response){return response.json();}).then(function(result){console.log(result);getPosts(setPosts,token,setPostsToDisplay);}).catch(console.error);}function SendMessageAPI(post_id,token,message){console.log(BaseUrl+'/posts/'+post_id+'/messages');fetch(BaseUrl+'/posts/'+post_id+'/messages',{method:\"POST\",headers:{'Content-Type':'application/json','Authorization':'Bearer '+token},body:JSON.stringify({message:{content:message}})}).then(function(response){return response.json();}).then(function(result){console.log(result);}).catch(console.error);}function RegisterUser(username,password,setToken){fetch(BaseUrl+'/users/register',{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify({user:{username:username,password:password}})}).then(function(response){return response.json();}).then(function(result){console.log(result);setToken(result.data.token);console.log(result.data.token);localStorage.setItem(\"token\",result.data.token);}).catch(console.error);}function LoginUser(username,password,setToken,setIncorrect){fetch(BaseUrl+'/users/login',{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify({user:{username:username,password:password}})}).then(function(response){return response.json();}).then(function(result){console.log(result.success);if(result.success){console.log(result);setToken(result.data.token);localStorage.setItem(\"token\",result.data.token);console.log(result.data.token);setIncorrect(false);}else{setIncorrect(true);}}).catch(console.error);}function getMyInfo(token,setMyInfo){fetch(BaseUrl+'/users/me',{headers:{'Content-Type':'application/json','Authorization':'Bearer '+token}}).then(function(response){return response.json();}).then(function(result){console.log(result);setMyInfo(result);}).catch(console.error);}function makePost(token,title,description,price,location,willDeliver){fetch(BaseUrl+'/posts',{method:\"POST\",headers:{'Content-Type':'application/json','Authorization':'Bearer '+token},body:JSON.stringify({post:{title:title,description:description,price:price,location:location,willDeliver:willDeliver}})}).then(function(response){return response.json();}).then(function(result){console.log(result);}).catch(console.error);}function editPost(postid,token,title,description,price,location,willDeliver){fetch(BaseUrl+'/posts/'+postid,{method:\"PATCH\",headers:{'Content-Type':'application/json','Authorization':'Bearer '+token},body:JSON.stringify({post:{title:title,description:description,price:price,location:location,willDeliver:willDeliver}})}).then(function(response){return response.json();}).then(function(result){console.log(result);}).catch(console.error);}export{getUserName,getPosts,DeletePost,SendMessageAPI,RegisterUser,LoginUser,getMyInfo,makePost,editPost};","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/apiCalls.js"],"names":["BaseUrl","getUserName","token","setUsername","fetch","headers","then","response","json","result","data","user","username","catch","console","error","getPosts","setPosts","setPostsToDisplay","posts","log","DeletePost","post_id","method","SendMessageAPI","message","body","JSON","stringify","content","RegisterUser","password","setToken","localStorage","setItem","LoginUser","setIncorrect","success","getMyInfo","setMyInfo","makePost","title","description","price","location","willDeliver","post","editPost","postid"],"mappings":"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","sourcesContent":["import { BaseUrl } from \"./constants\";\n\nfunction getUserName(token, setUsername)\n{\n    fetch(BaseUrl + '/test/me', {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    }).then(response => response.json())\n    .then(result => {\n        setUsername(result.data.user.username);\n    })\n    .catch(console.error);\n}\n\nfunction getPosts(setPosts, token, setPostsToDisplay)\n{\n    fetch(BaseUrl + '/posts',  {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(response => response.json())\n        .then(result => {\n            setPosts(result.data.posts);\n            setPostsToDisplay(result.data.posts);\n            console.log(result.data.posts)\n        }).catch(console.error);\n        \n}\n\nfunction DeletePost(post_id, token, setPosts, setPostsToDisplay)\n{\n    fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    }\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        getPosts(setPosts, token, setPostsToDisplay);\n        \n    })\n    .catch(console.error);\n}\n\nfunction SendMessageAPI(post_id, token, message)\n{\n    console.log(BaseUrl +  '/posts/' + post_id + '/messages')\n    fetch(BaseUrl +  '/posts/' + post_id + '/messages',{\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n        message: {\n        content: message\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nfunction RegisterUser(username, password, setToken)\n{\n    fetch(BaseUrl + '/users/register', {\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n        username: username,\n        password: password\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        setToken(result.data.token);\n        console.log(result.data.token);\n        localStorage.setItem(\"token\", result.data.token);\n    })\n    .catch(console.error);\n}\n\nfunction LoginUser(username, password, setToken, setIncorrect)\n{\n    fetch(BaseUrl + '/users/login', {\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n        username: username,\n        password: password\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result.success);\n        if(result.success)\n        { console.log(result);\n            setToken(result.data.token);\n            localStorage.setItem(\"token\", result.data.token);\n            console.log(result.data.token);\n            setIncorrect(false);\n        }\n        else{\n            setIncorrect(true);\n        }\n    })\n    .catch(console.error);\n}\n\nfunction getMyInfo(token, setMyInfo)\n{    fetch(BaseUrl + '/users/me', {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        setMyInfo(result);\n\n    })\n    .catch(console.error);\n}\n\nfunction makePost(token, title, description, price, location, willDeliver)\n{\n        fetch( BaseUrl + '/posts', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n            post: {\n            title,\n            description,\n            price,\n            location,\n            willDeliver\n            }\n        })\n        }).then(response => response.json())\n        .then(result => {\n            console.log(result);\n        })\n        .catch(console.error);\n}\n\nfunction editPost(postid, token, title, description, price, location, willDeliver)\n{\n    fetch(BaseUrl + '/posts/' + postid, {\n    method: \"PATCH\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n        post: {\n        title,\n        description,\n        price,\n        location,\n        willDeliver\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nexport {getUserName, getPosts, DeletePost, SendMessageAPI, RegisterUser, LoginUser, getMyInfo, makePost, editPost};"]},"metadata":{},"sourceType":"module"}