{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccacarr/Desktop/course_work/strangers_things/src/post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BaseUrl } from './constants';\nimport { getPosts } from './apiCalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeletePost(post_id, token, setPosts, setPostsToDisplay) {\n  fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    getPosts(setPosts, token, setPostsToDisplay);\n  }).catch(console.error);\n}\n\n_c = DeletePost;\n\nfunction SendMessageAPI(post_id, token, message) {\n  console.log(BaseUrl + '/posts/' + post_id + '/messages');\n  fetch(BaseUrl + '/posts/' + post_id + '/messages', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      message: {\n        content: message\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n}\n\n_c2 = SendMessageAPI;\n\nconst SendMessage = ({\n  setOpenM,\n  post_id,\n  token\n}) => {\n  let currentMessage = \"\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      SendMessageAPI(post_id, token, currentMessage);\n      console.log(post_id);\n      setOpenM(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Message: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          currentMessage = e.target.value;\n          e.target.value = currentMessage;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = SendMessage;\n\nconst Post = ({\n  element,\n  token,\n  me,\n  setPosts,\n  setPostsToDisplay\n}) => {\n  _s();\n\n  const [openM, setOpenM] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", element.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), \" \", element.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Will Deliver: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this), element.willDeliver ? \"yes\" : \"no\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Author: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this), \" \", element.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Location: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), \" \", element.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), element.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), element.isAuthor ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Messages: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), element.messages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 67\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          DeletePost(element._id, token, setPosts, setPostsToDisplay);\n        },\n        children: \"Delete Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }, this) : null, !element.isAuthor && token && !me ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setOpenM(true);\n        },\n        children: \"Send Message to Poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 52\n    }, this) : null, openM ? /*#__PURE__*/_jsxDEV(SendMessage, {\n      setOpenM: setOpenM,\n      post_id: element._id,\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"VSGaNoUIxnaxQx7xjXvtyZifh5I=\");\n\n_c4 = Post;\nexport default Post;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DeletePost\");\n$RefreshReg$(_c2, \"SendMessageAPI\");\n$RefreshReg$(_c3, \"SendMessage\");\n$RefreshReg$(_c4, \"Post\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/post.js"],"names":["React","useState","BaseUrl","getPosts","DeletePost","post_id","token","setPosts","setPostsToDisplay","fetch","method","headers","then","response","json","result","console","log","catch","error","SendMessageAPI","message","body","JSON","stringify","content","SendMessage","setOpenM","currentMessage","e","preventDefault","target","value","Post","element","me","openM","title","price","willDeliver","author","username","location","description","isAuthor","messages","map","index","_id"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { BaseUrl } from './constants';\nimport { getPosts } from './apiCalls';\n\nfunction DeletePost(post_id, token, setPosts, setPostsToDisplay)\n{\n    fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    }\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        getPosts(setPosts, token, setPostsToDisplay);\n        \n    })\n    .catch(console.error);\n}\n\nfunction SendMessageAPI(post_id, token, message)\n{\n    console.log(BaseUrl +  '/posts/' + post_id + '/messages')\n    fetch(BaseUrl +  '/posts/' + post_id + '/messages',{\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n        message: {\n        content: message\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nconst SendMessage = ({ setOpenM, post_id, token}) => {\n    let currentMessage = \"\";\n    return(\n        <form onSubmit = {(e) => {\n            e.preventDefault();\n            SendMessageAPI(post_id, token, currentMessage);\n            console.log(post_id)\n            setOpenM(false);\n        }}>\n            <div>\n                <label> Message: </label>\n                <input type = \"text\" onChange = {(e) => {currentMessage = e.target.value;\n                    e.target.value = currentMessage;}}/>\n            </div>\n            \n            <input type = \"submit\"/>\n            \n        </form>\n    )\n}\n\nconst Post = ({element, token, me, setPosts, setPostsToDisplay}) =>{\n    const [openM, setOpenM] = useState(false);\n    return(\n        <div className = \"post\" > \n           <div className = \"titleBox\">\n            <h2> {element.title}</h2>\n            <p> <b>Price: </b> {element.price}</p>\n            <p><b>Will Deliver: </b>{element.willDeliver ? \"yes\" : \"no\"}</p>\n           </div>\n            <div>\n            <p><b>Author: </b> {element.author.username}</p>\n            </div>\n            \n            <div><p><b>Location: </b> {element.location}</p></div>\n            <div><p><b>Description: </b>{element.description}</p></div>\n            {element.isAuthor ? <div> \n                <p><b>Messages: </b></p>\n                {element.messages.map((message, index) => {return(<div key = {index}>{message.content}</div>)})}\n                <button onClick = {() =>{\n                    DeletePost(element._id,token, setPosts, setPostsToDisplay);\n                }}>Delete Post </button>\n            </div> : null}\n            {(!element.isAuthor && token && !me) ? <div>\n                <button onClick = {() => {\n                    setOpenM(true);\n                }}>Send Message to Poster</button>\n            </div>:null}\n            {openM ? <SendMessage setOpenM = {setOpenM} post_id = {element._id} token = {token}/> : null}\n        </div>\n    )\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}