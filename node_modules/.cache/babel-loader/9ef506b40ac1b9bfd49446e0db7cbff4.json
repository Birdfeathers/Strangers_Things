{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccacarr/Desktop/course_work/strangers_things/src/me.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getMyInfo } from './apiCalls';\nimport Post from './post';\nimport { BaseUrl } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getPost(token, post_id) {\n  console.log(BaseUrl + '/posts/' + post_id);\n  fetch(BaseUrl + '/posts/' + post_id, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n}\n\nconst ViewMessage = ({\n  message,\n  id,\n  token\n}) => {\n  const isMe = id === message.fromUser._id;\n  console.log(message);\n  getPost(token, message.post._id);\n\n  if (isMe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Content: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }, this), message.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  } else return null;\n};\n\n_c = ViewMessage;\n\nconst Me = ({\n  token\n}) => {\n  _s();\n\n  const [myInfo, setMyInfo] = useState({});\n  useEffect(() => {\n    if (token) getMyInfo(token, setMyInfo);\n  }, [token]);\n  let data = myInfo.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), myInfo.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Posts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), myInfo.data.posts.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          element: element,\n          token: token,\n          me: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Messages Sent: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), myInfo.data.messages.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(ViewMessage, {\n          className: \"post\",\n          message: element,\n          id: data._id,\n          token: token\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are not logged in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Me, \"jGU+w/OGd2fQpuSN4Dg+gzjvmuM=\");\n\n_c2 = Me;\nexport default Me;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewMessage\");\n$RefreshReg$(_c2, \"Me\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/me.js"],"names":["React","useState","useEffect","getMyInfo","Post","BaseUrl","getPost","token","post_id","console","log","fetch","headers","then","response","json","result","catch","error","ViewMessage","message","id","isMe","fromUser","_id","post","content","Me","myInfo","setMyInfo","data","posts","map","element","index","messages"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { getMyInfo } from './apiCalls';\nimport Post from './post';\nimport { BaseUrl } from './constants';\n\nfunction getPost(token, post_id)\n{\n    console.log(BaseUrl + '/posts/' + post_id)\n    fetch(BaseUrl + '/posts/' + post_id,  {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(response => response.json())\n        .then(result => {\n            console.log(result)\n        }).catch(console.error);\n        \n}\n\n\nconst ViewMessage = ({message, id, token}) => {\n    const isMe = id === message.fromUser._id;\n    console.log(message);\n    getPost(token, message.post._id)\n    if(isMe){\n    return( <div className = \"post\">\n      \n        <p><b>Content: </b>{message.content}</p>\n    </div>)}\n    else return null;\n}\n\n\nconst Me = ({ token}) =>{\n   const [myInfo, setMyInfo] = useState({});\n   useEffect(() => {\n    if(token)getMyInfo(token, setMyInfo)\n   }, [token])\n   let data = myInfo.data;\n    return<div>\n        <div className = \"title\"><h1>Home</h1></div>\n        {myInfo.data? <div>\n            <p><b>Posts:</b></p>\n            {myInfo.data.posts.map((element, index) => {\n            return<Post key = {index} element = {element} token = {token} me = {true}/>})}\n            <p><b>Messages Sent: </b></p>\n            {myInfo.data.messages.map((element, index) => {\n            return<ViewMessage className = \"post\" key = {index} message = {element} id = {data._id} token = {token}/>})}\n        </div> : <p>You are not logged in.</p>}\n    </div>\n}\n\nexport default Me;"]},"metadata":{},"sourceType":"module"}