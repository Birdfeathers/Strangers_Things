{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccacarr/Desktop/course_work/strangers_things/src/post.js\";\nimport React from 'react';\nimport { BaseUrl } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeletePost(post_id, token) {\n  fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n}\n\n_c = DeletePost;\n\nconst Post = ({\n  element,\n  token\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", element.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), \" \", element.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Location: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this), \" \", element.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Will Deliver: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this), element.willDeliver ? \"yes\" : \"no\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), element.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), element.isAuthor ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Messages: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), element.messages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"message here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 67\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          DeletePost(element._id, token);\n          location.reload();\n        },\n        children: \"Delete Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Post;\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DeletePost\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/post.js"],"names":["React","BaseUrl","DeletePost","post_id","token","fetch","method","headers","then","response","json","result","console","log","catch","error","Post","element","title","price","location","willDeliver","description","isAuthor","messages","map","message","index","_id","reload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,KAA7B,EACA;AACIC,EAAAA,KAAK,CAACJ,OAAO,GAAG,SAAV,GAAsBE,OAAvB,EAAgC;AACrCG,IAAAA,MAAM,EAAE,QAD6B;AAErCC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAiB,YAAYH;AAFxB;AAF4B,GAAhC,CAAL,CAMGI,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOMG,MAAM,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GATD,EAUCG,KAVD,CAUOF,OAAO,CAACG,KAVf;AAWH;;KAbQb,U;;AAeT,MAAMc,IAAI,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUb,EAAAA;AAAV,CAAD,KAAqB;AAC9B,sBACI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BACI;AAAA,sBAAMa,OAAO,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,mCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,OAAoBD,OAAO,CAACE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAsBF,OAAO,CAACG,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,EAAyBH,OAAO,CAACI,WAAR,GAAsB,KAAtB,GAA8B,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,mCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,EAAyBJ,OAAO,CAACK,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMKL,OAAO,CAACM,QAAR,gBAAmB;AAAA,8BAChB;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cADgB,EAEfN,OAAO,CAACO,QAAR,CAAiBC,GAAjB,CAAqB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAAC,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAAgC,OAA1E,CAFe,eAGhB;AAAQ,QAAA,OAAO,EAAI,MAAK;AACpBzB,UAAAA,UAAU,CAACe,OAAO,CAACW,GAAT,EAAaxB,KAAb,CAAV;AACAgB,UAAAA,QAAQ,CAACS,MAAT;AACH,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHgB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAnB,GAOQ,IAbb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlBD;;MAAMb,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { BaseUrl } from './constants';\n\nfunction DeletePost(post_id, token)\n{\n    fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    }\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nconst Post = ({element, token}) =>{\n    return(\n        <div className = \"post\" > \n            <h1> {element.title}</h1>\n            <p> <b>Price: </b> {element.price}</p>\n            <p><b>Location: </b> {element.location}</p>\n            <p><b>Will Deliver: </b>{element.willDeliver ? \"yes\" : \"no\"}</p>\n            <p> <b>Description: </b>{element.description}</p>\n            {element.isAuthor ? <div> \n                <p><b>Messages: </b></p>\n                {element.messages.map((message, index) => {return(<div>message here</div>)})}\n                <button onClick = {() =>{\n                    DeletePost(element._id,token);\n                    location.reload();\n                }}>Delete Post </button>\n            </div> : null}\n        </div>\n    )\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}