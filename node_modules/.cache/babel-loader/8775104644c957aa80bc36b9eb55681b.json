{"ast":null,"code":"import { BaseUrl } from \"./constants\";\n\nfunction getUserName(token, setUsername) {\n  fetch(BaseUrl + '/test/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json()).then(result => {\n    setUsername(result.data.user.username);\n  }).catch(console.error);\n}\n\nfunction getPosts(setPosts, token, setPostsToDisplay) {\n  fetch(BaseUrl + '/posts', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json()).then(result => {\n    setPosts(result.data.posts);\n    setPostsToDisplay(result.data.posts);\n    console.log(result.data.posts);\n  }).catch(console.error);\n}\n\nfunction DeletePost(post_id, token, setPosts, setPostsToDisplay) {\n  fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    getPosts(setPosts, token, setPostsToDisplay);\n  }).catch(console.error);\n}\n\n_c = DeletePost;\n\nfunction SendMessageAPI(post_id, token, message) {\n  console.log(BaseUrl + '/posts/' + post_id + '/messages');\n  fetch(BaseUrl + '/posts/' + post_id + '/messages', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      message: {\n        content: message\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n}\n\n_c2 = SendMessageAPI;\nexport { getUserName, getPosts, DeletePost, SendMessageAPI };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DeletePost\");\n$RefreshReg$(_c2, \"SendMessageAPI\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/apiCalls.js"],"names":["BaseUrl","getUserName","token","setUsername","fetch","headers","then","response","json","result","data","user","username","catch","console","error","getPosts","setPosts","setPostsToDisplay","posts","log","DeletePost","post_id","method","SendMessageAPI","message","body","JSON","stringify","content"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,WAA5B,EACA;AACIC,EAAAA,KAAK,CAACJ,OAAO,GAAG,UAAX,EAAuB;AAC5BK,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAiB,YAAYH;AAFxB;AADmB,GAAvB,CAAL,CAKGI,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMCF,IAND,CAMMG,MAAM,IAAI;AACZN,IAAAA,WAAW,CAACM,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiBC,QAAlB,CAAX;AACH,GARD,EASCC,KATD,CASOC,OAAO,CAACC,KATf;AAUH;;AAED,SAASC,QAAT,CAAkBC,QAAlB,EAA4Bf,KAA5B,EAAmCgB,iBAAnC,EACA;AACId,EAAAA,KAAK,CAACJ,OAAO,GAAG,QAAX,EAAsB;AACvBK,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,YAAYH;AAFtB;AADc,GAAtB,CAAL,CAKKI,IALL,CAKUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALtB,EAMKF,IANL,CAMUG,MAAM,IAAI;AACZQ,IAAAA,QAAQ,CAACR,MAAM,CAACC,IAAP,CAAYS,KAAb,CAAR;AACAD,IAAAA,iBAAiB,CAACT,MAAM,CAACC,IAAP,CAAYS,KAAb,CAAjB;AACAL,IAAAA,OAAO,CAACM,GAAR,CAAYX,MAAM,CAACC,IAAP,CAAYS,KAAxB;AACH,GAVL,EAUON,KAVP,CAUaC,OAAO,CAACC,KAVrB;AAYH;;AAED,SAASM,UAAT,CAAoBC,OAApB,EAA6BpB,KAA7B,EAAoCe,QAApC,EAA8CC,iBAA9C,EACA;AACId,EAAAA,KAAK,CAACJ,OAAO,GAAG,SAAV,GAAsBsB,OAAvB,EAAgC;AACrCC,IAAAA,MAAM,EAAE,QAD6B;AAErClB,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAiB,YAAYH;AAFxB;AAF4B,GAAhC,CAAL,CAMGI,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOMG,MAAM,IAAI;AACZK,IAAAA,OAAO,CAACM,GAAR,CAAYX,MAAZ;AACAO,IAAAA,QAAQ,CAACC,QAAD,EAAWf,KAAX,EAAkBgB,iBAAlB,CAAR;AAEH,GAXD,EAYCL,KAZD,CAYOC,OAAO,CAACC,KAZf;AAaH;;KAfQM,U;;AAiBT,SAASG,cAAT,CAAwBF,OAAxB,EAAiCpB,KAAjC,EAAwCuB,OAAxC,EACA;AACIX,EAAAA,OAAO,CAACM,GAAR,CAAYpB,OAAO,GAAI,SAAX,GAAuBsB,OAAvB,GAAiC,WAA7C;AACAlB,EAAAA,KAAK,CAACJ,OAAO,GAAI,SAAX,GAAuBsB,OAAvB,GAAiC,WAAlC,EAA8C;AACnDC,IAAAA,MAAM,EAAE,MAD2C;AAEnDlB,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAiB,YAAYH;AAFxB,KAF0C;AAMnDwB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBH,MAAAA,OAAO,EAAE;AACTI,QAAAA,OAAO,EAAEJ;AADA;AADQ,KAAf;AAN6C,GAA9C,CAAL,CAWGnB,IAXH,CAWQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXpB,EAYCF,IAZD,CAYMG,MAAM,IAAI;AACZK,IAAAA,OAAO,CAACM,GAAR,CAAYX,MAAZ;AACH,GAdD,EAeCI,KAfD,CAeOC,OAAO,CAACC,KAff;AAgBH;;MAnBQS,c;AAqBT,SAAQvB,WAAR,EAAqBe,QAArB,EAA+BK,UAA/B,EAA2CG,cAA3C","sourcesContent":["import { BaseUrl } from \"./constants\";\n\nfunction getUserName(token, setUsername)\n{\n    fetch(BaseUrl + '/test/me', {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    }).then(response => response.json())\n    .then(result => {\n        setUsername(result.data.user.username);\n    })\n    .catch(console.error);\n}\n\nfunction getPosts(setPosts, token, setPostsToDisplay)\n{\n    fetch(BaseUrl + '/posts',  {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(response => response.json())\n        .then(result => {\n            setPosts(result.data.posts);\n            setPostsToDisplay(result.data.posts);\n            console.log(result.data.posts)\n        }).catch(console.error);\n        \n}\n\nfunction DeletePost(post_id, token, setPosts, setPostsToDisplay)\n{\n    fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    }\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        getPosts(setPosts, token, setPostsToDisplay);\n        \n    })\n    .catch(console.error);\n}\n\nfunction SendMessageAPI(post_id, token, message)\n{\n    console.log(BaseUrl +  '/posts/' + post_id + '/messages')\n    fetch(BaseUrl +  '/posts/' + post_id + '/messages',{\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n        message: {\n        content: message\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nexport {getUserName, getPosts, DeletePost, SendMessageAPI};"]},"metadata":{},"sourceType":"module"}