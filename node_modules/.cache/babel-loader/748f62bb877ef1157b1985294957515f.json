{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccacarr/Desktop/course_work/strangers_things/src/me.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getMyInfo } from './apiCalls';\nimport Post from './post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewMessage = ({\n  message,\n  token\n}) => {\n  console.log(message);\n  const matches = token === message.fromUser._id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"From: \", message.fromUser.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ViewMessage;\n\nconst Me = ({\n  token\n}) => {\n  _s();\n\n  const [myInfo, setMyInfo] = useState({});\n  useEffect(() => {\n    if (token) getMyInfo(token, setMyInfo);\n  }, [token]);\n  let data = myInfo.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), myInfo.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Posts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), myInfo.data.posts.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          element: element,\n          token: token,\n          me: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Messages Sent: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), myInfo.data.messages.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(ViewMessage, {\n          className: \"post\",\n          message: element,\n          token: token\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are not logged in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Me, \"jGU+w/OGd2fQpuSN4Dg+gzjvmuM=\");\n\n_c2 = Me;\nexport default Me;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewMessage\");\n$RefreshReg$(_c2, \"Me\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/me.js"],"names":["React","useState","useEffect","getMyInfo","Post","ViewMessage","message","token","console","log","matches","fromUser","_id","username","content","Me","myInfo","setMyInfo","data","posts","map","element","index","messages"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAsB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,QAAMI,OAAO,GAAGH,KAAK,KAAKD,OAAO,CAACK,QAAR,CAAiBC,GAA3C;AACA,sBAAO;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BAEH;AAAA,2BAAWN,OAAO,CAACK,QAAR,CAAiBE,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAA,gBAAIP,OAAO,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CARD;;KAAMT,W;;AAWN,MAAMU,EAAE,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACrB,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAGK,KAAH,EAASJ,SAAS,CAACI,KAAD,EAAQU,SAAR,CAAT;AACT,GAFQ,EAEN,CAACV,KAAD,CAFM,CAAT;AAGA,MAAIW,IAAI,GAAGF,MAAM,CAACE,IAAlB;AACC,sBAAM;AAAA,4BACF;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA,6BAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADE,EAEDF,MAAM,CAACE,IAAP,gBAAa;AAAA,8BACV;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cADU,EAETF,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3C,4BAAM,QAAC,IAAD;AAAoB,UAAA,OAAO,EAAID,OAA/B;AAAwC,UAAA,KAAK,EAAId,KAAjD;AAAwD,UAAA,EAAE,EAAI;AAA9D,WAAae,KAAb;AAAA;AAAA;AAAA;AAAA,gBAAN;AAA4E,OAD3E,CAFS,eAIV;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAJU,EAKTN,MAAM,CAACE,IAAP,CAAYK,QAAZ,CAAqBH,GAArB,CAAyB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC9C,4BAAM,QAAC,WAAD;AAAa,UAAA,SAAS,EAAG,MAAzB;AAA8C,UAAA,OAAO,EAAID,OAAzD;AAAkE,UAAA,KAAK,EAAId;AAA3E,WAAuCe,KAAvC;AAAA;AAAA;AAAA;AAAA,gBAAN;AAA0F,OADzF,CALS;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb,gBAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATP;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAWH,CAjBD;;GAAMP,E;;MAAAA,E;AAmBN,eAAeA,EAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { getMyInfo } from './apiCalls';\nimport Post from './post';\n\nconst ViewMessage = ({message, token}) => {\n    console.log(message);\n    const matches = token === message.fromUser._id;\n    return(<div className = \"post\">\n      \n        <h4>From: {message.fromUser.username}</h4>\n        <p>{message.content}</p>\n    </div>)\n}\n\n\nconst Me = ({ token}) =>{\n   const [myInfo, setMyInfo] = useState({});\n   useEffect(() => {\n    if(token)getMyInfo(token, setMyInfo)\n   }, [token])\n   let data = myInfo.data;\n    return<div>\n        <div className = \"title\"><h1>Home</h1></div>\n        {myInfo.data? <div>\n            <p><b>Posts:</b></p>\n            {myInfo.data.posts.map((element, index) => {\n            return<Post key = {index} element = {element} token = {token} me = {true}/>})}\n            <p><b>Messages Sent: </b></p>\n            {myInfo.data.messages.map((element, index) => {\n            return<ViewMessage className = \"post\" key = {index} message = {element} token = {token}/>})}\n        </div> : <p>You are not logged in.</p>}\n    </div>\n}\n\nexport default Me;"]},"metadata":{},"sourceType":"module"}