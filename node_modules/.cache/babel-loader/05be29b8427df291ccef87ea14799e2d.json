{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccacarr/Desktop/course_work/strangers_things/src/post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BaseUrl } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeletePost(post_id, token) {\n  fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n}\n\n_c = DeletePost;\n\nfunction SendMessageAPI(post_id, token, message) {\n  fetch(BaseUrl + '/posts' + post_id, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      message: {\n        content: message\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n}\n\n_c2 = SendMessageAPI;\n\nconst SendMessage = ({\n  setCurrentMessage,\n  currentMessage,\n  setOpenM,\n  post_id,\n  token\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: () => {\n      // SendMessageAPI(post_id, token, currentMessage);\n      console.log(post_id); // setOpenM(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Message: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setCurrentMessage(e.target.value);\n          e.target.value = currentMessage;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = SendMessage;\n\nconst Post = ({\n  element,\n  token\n}) => {\n  _s();\n\n  const [openM, setOpenM] = useState(false);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", element.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), \" \", element.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Location: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this), \" \", element.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Will Deliver: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this), element.willDeliver ? \"yes\" : \"no\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), element.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), element.isAuthor ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Messages: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), element.messages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"message here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 67\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          DeletePost(element._id, token);\n        },\n        children: \"Delete Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }, this) : null, !element.isAuthor && token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setOpenM(true);\n        },\n        children: \"Send Message to Poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }, this) : null, openM ? /*#__PURE__*/_jsxDEV(SendMessage, {\n      currentMessage: currentMessage,\n      setCurrentMessage: setCurrentMessage,\n      setOpenM: setOpenM,\n      post_id: element._id,\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"NF9F32cll2weFDQsUku1pkl/ezc=\");\n\n_c4 = Post;\nexport default Post;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DeletePost\");\n$RefreshReg$(_c2, \"SendMessageAPI\");\n$RefreshReg$(_c3, \"SendMessage\");\n$RefreshReg$(_c4, \"Post\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/post.js"],"names":["React","useState","BaseUrl","DeletePost","post_id","token","fetch","method","headers","then","response","json","result","console","log","catch","error","SendMessageAPI","message","body","JSON","stringify","content","SendMessage","setCurrentMessage","currentMessage","setOpenM","e","target","value","Post","element","openM","title","price","location","willDeliver","description","isAuthor","messages","map","index","_id"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { BaseUrl } from './constants';\n\nfunction DeletePost(post_id, token)\n{\n    fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    }\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nfunction SendMessageAPI(post_id, token, message)\n{\n    fetch(BaseUrl +  '/posts' + post_id,{\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n        message: {\n        content: message\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nconst SendMessage = ({setCurrentMessage, currentMessage, setOpenM, post_id, token}) => {\n    return(\n        <form onSubmit = {() => {\n            // SendMessageAPI(post_id, token, currentMessage);\n            console.log(post_id)\n            // setOpenM(false);\n        }}>\n            <div>\n                <label> Message: </label>\n                <input type = \"text\" onChange = {(e) => {setCurrentMessage(e.target.value);\n                    e.target.value = currentMessage;}}/>\n            \n            <input type = \"submit\"/>\n            </div>\n        </form>\n    )\n}\n\nconst Post = ({element, token}) =>{\n    const [openM, setOpenM] = useState(false);\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    return(\n        <div className = \"post\" > \n            <h1> {element.title}</h1>\n            <p> <b>Price: </b> {element.price}</p>\n            <p><b>Location: </b> {element.location}</p>\n            <p><b>Will Deliver: </b>{element.willDeliver ? \"yes\" : \"no\"}</p>\n            <p> <b>Description: </b>{element.description}</p>\n            {element.isAuthor ? <div> \n                <p><b>Messages: </b></p>\n                {element.messages.map((message, index) => {return(<div>message here</div>)})}\n                <button onClick = {() =>{\n                    DeletePost(element._id,token);\n                }}>Delete Post </button>\n            </div> : null}\n            {(!element.isAuthor && token) ? <div>\n                <button onClick = {() => {\n                    setOpenM(true);\n                }}>Send Message to Poster</button>\n            </div>:null}\n            {openM ? <SendMessage currentMessage = {currentMessage} setCurrentMessage = {setCurrentMessage} setOpenM = {setOpenM} post_id = {element._id} token = {token}/> : null}\n        </div>\n    )\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}