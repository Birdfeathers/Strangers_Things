{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccacarr/Desktop/course_work/strangers_things/src/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BaseUrl } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: \"Error, passwords do not match! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 11\n  }, this);\n};\n\n_c = Message;\n\nfunction RegisterUser(username, password) {\n  fetch(BaseUrl + '/users/register', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n}\n\n_c2 = RegisterUser;\n\nconst Login = ({\n  mode\n}) => {\n  _s();\n\n  const isLogin = mode == \"login\";\n  const [message, setMessage] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      const username = document.getElementById(\"username\").value;\n      const password = document.getElementById(\"password\").value;\n\n      if (!isLogin) {\n        const confirmPassword = document.getElementById(\"confirmPassword\").value;\n\n        if (password != confirmPassword) {\n          setMessage(true);\n        } else {\n          RegisterUser(username, password);\n        }\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" UserName: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), isLogin ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Confirm Password : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"confirmPassword\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), message ? /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Login, \"n0fnK4ZqApEScFgFl1/p++eCWeA=\");\n\n_c3 = Login;\nexport default Login;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"RegisterUser\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/login.js"],"names":["React","useState","BaseUrl","Message","RegisterUser","username","password","fetch","method","headers","body","JSON","stringify","user","then","response","json","result","console","log","catch","error","Login","mode","isLogin","message","setMessage","event","preventDefault","document","getElementById","value","confirmPassword"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { BaseUrl } from './constants';\n\nconst Message = () => {\n    return<div className = \"error\">Error, passwords do not match! </div>\n}\n\nfunction RegisterUser(username, password)\n{\n    fetch(BaseUrl + '/users/register', {\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n        username: username,\n        password: password\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nconst Login = ({mode}) => {\n    const isLogin = mode == \"login\";\n    const [message, setMessage] = useState(false);\n    return<form onSubmit = {(event) => {\n        event.preventDefault();\n        const username = document.getElementById(\"username\").value;\n        const password = document.getElementById(\"password\").value;\n        if(!isLogin)\n        {\n            const confirmPassword = document.getElementById(\"confirmPassword\").value;\n            if(password != confirmPassword)\n            {\n                setMessage(true);\n            }\n            else{\n                RegisterUser(username, password);\n            }\n        }\n    }}>\n        <div>\n            <label > UserName: </label>\n            <input id = \"username\" type = \"text\" />\n        </div>\n        <div>\n            <label > Password: </label>\n            <input id = \"password\" type = \"text\" />\n        </div>\n    \n        {isLogin ? null : <div>\n            <label > Confirm Password : </label>\n            <input id = \"confirmPassword\" type = \"text\" />\n            </div>}\n        <input type = \"submit\"/>\n        {message ? <Message /> : null}\n\n    </form>\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}