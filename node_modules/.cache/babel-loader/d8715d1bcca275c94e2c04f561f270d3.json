{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccacarr/Desktop/course_work/strangers_things/src/me.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BaseUrl } from './constants';\nimport Post from './post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewMessage = message => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(message), console.log(message.fromUser)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ViewMessage;\n\nfunction getMyInfo(token, setMyInfo) {\n  fetch(BaseUrl + '/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    setMyInfo(result);\n  }).catch(console.error);\n}\n\nconst Me = ({\n  token\n}) => {\n  _s();\n\n  const [myInfo, setMyInfo] = useState({});\n  useEffect(() => {\n    if (token) getMyInfo(token, setMyInfo);\n  }, [token]);\n  let data = myInfo.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: myInfo.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Posts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), myInfo.data.posts.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          element: element,\n          token: token\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Messages Received: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), myInfo.data.messages.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(ViewMessage, {\n          message: element\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Me, \"jGU+w/OGd2fQpuSN4Dg+gzjvmuM=\");\n\n_c2 = Me;\nexport default Me;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewMessage\");\n$RefreshReg$(_c2, \"Me\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/me.js"],"names":["React","useState","useEffect","BaseUrl","Post","ViewMessage","message","console","log","fromUser","getMyInfo","token","setMyInfo","fetch","headers","then","response","json","result","catch","error","Me","myInfo","data","posts","map","element","index","messages"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,WAAW,GAAIC,OAAD,IAAa;AAC7B,sBAAO;AAAA,eACFC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CADE,EAEFC,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,QAApB,CAFE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CAPD;;KAAMJ,W;;AASN,SAASK,SAAT,CAAmBC,KAAnB,EAA0BC,SAA1B,EACA;AAAKC,EAAAA,KAAK,CAACV,OAAO,GAAG,WAAX,EAAwB;AAC9BW,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAiB,YAAYH;AAFxB;AADqB,GAAxB,CAAL,CAKEI,IALF,CAKOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALnB,EAMAF,IANA,CAMKG,MAAM,IAAI;AACZX,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AACAN,IAAAA,SAAS,CAACM,MAAD,CAAT;AAEH,GAVA,EAWAC,KAXA,CAWMZ,OAAO,CAACa,KAXd;AAYJ;;AAED,MAAMC,EAAE,GAAG,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACrB,QAAM,CAACW,MAAD,EAASV,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAGS,KAAH,EAASD,SAAS,CAACC,KAAD,EAAQC,SAAR,CAAT;AACT,GAFQ,EAEN,CAACD,KAAD,CAFM,CAAT;AAGA,MAAIY,IAAI,GAAGD,MAAM,CAACC,IAAlB;AACC,sBAAM;AAAA,cACDD,MAAM,CAACC,IAAP,gBAAa;AAAA,8BACV;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cADU,EAETD,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3C,4BAAM,QAAC,IAAD;AAAoB,UAAA,OAAO,EAAID,OAA/B;AAAwC,UAAA,KAAK,EAAIf;AAAjD,WAAagB,KAAb;AAAA;AAAA;AAAA;AAAA,gBAAN;AAAgE,OAD/D,CAFS,eAIV;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAJU,EAKTL,MAAM,CAACC,IAAP,CAAYK,QAAZ,CAAqBH,GAArB,CAAyB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC9C,4BAAM,QAAC,WAAD;AAA2B,UAAA,OAAO,EAAID;AAAtC,WAAoBC,KAApB;AAAA;AAAA;AAAA;AAAA,gBAAN;AAAuD,OADtD,CALS;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb,GAOQ;AARP;AAAA;AAAA;AAAA;AAAA,UAAN;AAUH,CAhBD;;GAAMN,E;;MAAAA,E;AAkBN,eAAeA,EAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { BaseUrl } from './constants';\nimport Post from './post';\n\nconst ViewMessage = (message) => {\n    return(<div>\n        {console.log(message)}\n        {console.log(message.fromUser)}\n        {/* <h1>From: {message.fromUser.username}</h1>\n        <p>{message.content}</p> */}\n    </div>)\n}\n\nfunction getMyInfo(token, setMyInfo)\n{    fetch(BaseUrl + '/users/me', {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        setMyInfo(result);\n\n    })\n    .catch(console.error);\n}\n\nconst Me = ({ token}) =>{\n   const [myInfo, setMyInfo] = useState({});\n   useEffect(() => {\n    if(token)getMyInfo(token, setMyInfo)\n   }, [token])\n   let data = myInfo.data;\n    return<div>\n        {myInfo.data? <div>\n            <p><b>Posts:</b></p>\n            {myInfo.data.posts.map((element, index) => {\n            return<Post key = {index} element = {element} token = {token}/>})}\n            <p><b>Messages Received: </b></p>\n            {myInfo.data.messages.map((element, index) => {\n            return<ViewMessage key = {index} message = {element}/>})}\n        </div> : null}\n    </div>\n}\n\nexport default Me;"]},"metadata":{},"sourceType":"module"}