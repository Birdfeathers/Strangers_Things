{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccacarr/Desktop/course_work/strangers_things/src/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BaseUrl } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: \"Error, passwords do not match! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 11\n  }, this);\n};\n\n_c = Message;\n\nfunction RegisterUser(username, password, setToken) {\n  fetch(BaseUrl + '/users/register', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    setToken(result.data.token);\n    console.log(result.data.token);\n    localStorage.setItem(\"token\", result.data.token);\n  }).catch(console.error);\n}\n\n_c2 = RegisterUser;\n\nfunction LoginUser(username, password, setToken) {\n  fetch(BaseUrl + '/users/login', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    setToken(result.data.token);\n    localStorage.setItem(\"token\", result.data.token);\n    console.log(result.data.token);\n  }).catch(console.error);\n}\n\n_c3 = LoginUser;\n\nconst Login = ({\n  mode,\n  setToken\n}) => {\n  _s();\n\n  const isLogin = mode == \"login\";\n  const [message, setMessage] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      const username = document.getElementById(\"username\").value;\n      const password = document.getElementById(\"password\").value;\n\n      if (!isLogin) {\n        const confirmPassword = document.getElementById(\"confirmPassword\").value;\n\n        if (password != confirmPassword) {\n          setMessage(true);\n        } else {\n          RegisterUser(username, password, setToken);\n          setMessage(false);\n        }\n      } else {\n        LoginUser(username, password, setToken);\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \" UserName: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \" Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), isLogin ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \" Confirm Password : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"confirmPassword\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), message ? /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 20\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Login, \"n0fnK4ZqApEScFgFl1/p++eCWeA=\");\n\n_c4 = Login;\nexport default Login;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"RegisterUser\");\n$RefreshReg$(_c3, \"LoginUser\");\n$RefreshReg$(_c4, \"Login\");","map":{"version":3,"sources":["/Users/rebeccacarr/Desktop/course_work/strangers_things/src/login.js"],"names":["React","useState","BaseUrl","Message","RegisterUser","username","password","setToken","fetch","method","headers","body","JSON","stringify","user","then","response","json","result","console","log","data","token","localStorage","setItem","catch","error","LoginUser","Login","mode","isLogin","message","setMessage","event","preventDefault","document","getElementById","value","confirmPassword"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { BaseUrl } from './constants';\n\nconst Message = () => {\n    return<div className = \"error\">Error, passwords do not match! </div>\n}\n\nfunction RegisterUser(username, password, setToken)\n{\n    fetch(BaseUrl + '/users/register', {\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n        username: username,\n        password: password\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        setToken(result.data.token);\n        console.log(result.data.token);\n        localStorage.setItem(\"token\", result.data.token);\n    })\n    .catch(console.error);\n}\n\nfunction LoginUser(username, password, setToken)\n{\n    fetch(BaseUrl + '/users/login', {\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n        username: username,\n        password: password\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        setToken(result.data.token);\n        localStorage.setItem(\"token\", result.data.token);\n        console.log(result.data.token);\n    })\n    .catch(console.error);\n}\n\n\n\n\nconst Login = ({mode, setToken}) => {\n    const isLogin = mode == \"login\";\n    const [message, setMessage] = useState(false);\n    return<form onSubmit = {(event) => {\n        event.preventDefault();\n        const username = document.getElementById(\"username\").value;\n        const password = document.getElementById(\"password\").value;\n        if(!isLogin)\n        {\n            const confirmPassword = document.getElementById(\"confirmPassword\").value;\n            if(password != confirmPassword)\n            {\n                setMessage(true);\n            }\n            else{\n                RegisterUser(username, password, setToken);\n                setMessage(false);\n            }\n        }\n        else{\n            LoginUser(username, password, setToken)\n        }\n    } }>\n        <div className = \"mb-3\">\n            <label htmlFor = \"username\"> UserName: </label>\n            <input id = \"username\" type = \"text\" />\n        </div>\n        <div>\n            <label htmlFor = \"password\"> Password: </label>\n            <input id = \"password\" type = \"password\" />\n        </div>\n    \n        {isLogin ? null : <div>\n            <label htmlFor = \"confirmPassword\"> Confirm Password : </label>\n            <input id = \"confirmPassword\" type = \"password\" />\n            </div>}\n        <input type = \"submit\"/>\n        {message ? <Message /> : null}\n\n    </form>\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}