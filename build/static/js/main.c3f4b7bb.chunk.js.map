{"version":3,"sources":["constants.js","apiCalls.js","post.js","login.js","createPost.js","search.js","me.js","edit.js","index.js"],"names":["BaseUrl","getPosts","setPosts","token","setPostsToDisplay","fetch","headers","then","response","json","result","data","posts","console","log","catch","error","SendMessage","setOpenM","post_id","currentMessage","onSubmit","e","preventDefault","message","method","body","JSON","stringify","content","SendMessageAPI","type","onChange","target","value","Post","element","me","history","useState","openM","className","title","price","willDeliver","active","author","username","location","description","isAuthor","messages","map","index","fromUser","onClick","DeletePost","_id","push","Message","Incorrect","Login","mode","setToken","isLogin","setMessage","incorrect","setIncorrect","event","document","getElementById","password","user","success","localStorage","setItem","LoginUser","RegisterUser","htmlFor","id","required","CreatePost","post","makePost","rows","checked","Search","setSearchTerm","searchTerm","st","filteredPosts","filter","text","toLowerCase","includes","postMatches","length","ViewMessage","isMe","Me","myInfo","setMyInfo","useEffect","getMyInfo","EditPost","match","findPost","params","postid","editPost","defaultValue","defaultChecked","find","AlreadyIn","App","postsToDisplay","setUsername","t","getItem","getUserName","to","path","render","routeProps","exact","ReactDOM"],"mappings":"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","file":"static/js/main.c3f4b7bb.chunk.js","sourcesContent":["const BaseUrl = 'https://strangers-things.herokuapp.com/api/2107-CSU-WEB-PT';\n\nexport {BaseUrl};","import { BaseUrl } from \"./constants\";\n\nfunction getUserName(token, setUsername)\n{\n    fetch(BaseUrl + '/test/me', {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    }).then(response => response.json())\n    .then(result => {\n        setUsername(result.data.user.username);\n    })\n    .catch(console.error);\n}\n\nfunction getPosts(setPosts, token, setPostsToDisplay)\n{\n    fetch(BaseUrl + '/posts',  {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(response => response.json())\n        .then(result => {\n            setPosts(result.data.posts);\n            setPostsToDisplay(result.data.posts);\n            console.log(result.data.posts)\n        }).catch(console.error);\n        \n}\n\nfunction DeletePost(post_id, token, setPosts, setPostsToDisplay)\n{\n    fetch(BaseUrl + '/posts/' + post_id, {\n    method: \"DELETE\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    }\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        getPosts(setPosts, token, setPostsToDisplay);\n        \n    })\n    .catch(console.error);\n}\n\nfunction SendMessageAPI(post_id, token, message)\n{\n    console.log(BaseUrl +  '/posts/' + post_id + '/messages')\n    fetch(BaseUrl +  '/posts/' + post_id + '/messages',{\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n        message: {\n        content: message\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nfunction RegisterUser(username, password, setToken)\n{\n    fetch(BaseUrl + '/users/register', {\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n        username: username,\n        password: password\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        setToken(result.data.token);\n        console.log(result.data.token);\n        localStorage.setItem(\"token\", result.data.token);\n    })\n    .catch(console.error);\n}\n\nfunction LoginUser(username, password, setToken, setIncorrect)\n{\n    fetch(BaseUrl + '/users/login', {\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n        username: username,\n        password: password\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result.success);\n        if(result.success)\n        { console.log(result);\n            setToken(result.data.token);\n            localStorage.setItem(\"token\", result.data.token);\n            console.log(result.data.token);\n            setIncorrect(false);\n        }\n        else{\n            setIncorrect(true);\n        }\n    })\n    .catch(console.error);\n}\n\nfunction getMyInfo(token, setMyInfo)\n{    fetch(BaseUrl + '/users/me', {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        setMyInfo(result);\n\n    })\n    .catch(console.error);\n}\n\nfunction makePost(token, title, description, price, location, willDeliver)\n{\n        fetch( BaseUrl + '/posts', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n            post: {\n            title,\n            description,\n            price,\n            location,\n            willDeliver\n            }\n        })\n        }).then(response => response.json())\n        .then(result => {\n            console.log(result);\n        })\n        .catch(console.error);\n}\n\nfunction editPost(postid, token, title, description, price, location, willDeliver)\n{\n    fetch(BaseUrl + '/posts/' + postid, {\n    method: \"PATCH\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n        post: {\n        title,\n        description,\n        price,\n        location,\n        willDeliver\n        }\n    })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\nexport {getUserName, getPosts, DeletePost, SendMessageAPI, RegisterUser, LoginUser, getMyInfo, makePost, editPost};","import React, {useState} from 'react';\nimport { DeletePost, SendMessageAPI} from './apiCalls';\n\n\nconst SendMessage = ({ setOpenM, post_id, token}) => {\n    let currentMessage = \"\";\n    return(\n        <form onSubmit = {(e) => {\n            e.preventDefault();\n            SendMessageAPI(post_id, token, currentMessage);\n            console.log(post_id)\n            setOpenM(false);\n        }}>\n            <div>\n                <label> Message: </label>\n                <input type = \"text\" onChange = {(e) => {currentMessage = e.target.value;\n                    e.target.value = currentMessage;}}/>\n            </div>\n            \n            <input type = \"submit\"/>\n            \n        </form>\n    )\n}\n\nconst Post = ({element, token, me, setPosts, setPostsToDisplay, history}) =>{\n    const [openM, setOpenM] = useState(false);\n    return(\n        <div className = \"post\" > \n           <div className = \"titleBox\">\n            <h2> {element.title}</h2>\n            <p> <b>Price: </b> {element.price}</p>\n            <p><b>Will Deliver: </b>{element.willDeliver ? \"yes\" : \"no\"}</p>\n           </div>\n            <div>\n            {me ? <p><b>Active:</b>{element.active ? \"yes\": \"no\"}</p>: <p><b>Author: </b> {element.author.username}</p>}\n            </div>\n            <div><p><b>Location: </b> {element.location}</p></div>\n            <div><p><b>Description: </b>{element.description}</p></div>\n            {element.isAuthor || me ? <div> \n                <p><b>Messages: </b></p>\n                {element.messages.map((message, index) => {return(<div key = {index} className = \"message\">\n                    <div className = \"border\"><b>Author:</b> {message.fromUser.username} </div>\n                    <div>{message.content} </div>\n                    </div>)})}\n                {element.isAuthor ? <div><button onClick = {() =>{\n                    DeletePost(element._id,token, setPosts, setPostsToDisplay);\n                }}>Delete Post </button>\n                <button onClick = {() => {\n                    history.push(\"/edit/\" + element._id)}}>Edit Post</button>\n                </div>: null}\n            </div> : null}\n            {(!element.isAuthor && token && !me) ? <div>\n                <button onClick = {() => {\n                    setOpenM(true);\n                }}>Send Message to Poster</button>\n            </div>:null}\n            {openM ? <SendMessage setOpenM = {setOpenM} post_id = {element._id} token = {token} /> : null}\n        </div>\n    )\n}\n\nexport default Post;\n","import React, {useState} from 'react';\nimport { RegisterUser, LoginUser} from './apiCalls';\n\nconst Message = () => {\n    return<div className = \"error\">Error, passwords do not match! </div>\n}\n\nconst Incorrect = () => {\n    return<div className = \"error\">Error, username or password are incorrect!</div>\n}\n\n\nconst Login = ({mode, setToken}) => {\n    const isLogin = mode == \"login\";\n    const [message, setMessage] = useState(false);\n    const [incorrect, setIncorrect] = useState(false);\n    return<form onSubmit = {(event) => {\n        event.preventDefault();\n        const username = document.getElementById(\"username\").value;\n        const password = document.getElementById(\"password\").value;\n        if(!isLogin)\n        {\n            const confirmPassword = document.getElementById(\"confirmPassword\").value;\n            if(password != confirmPassword)\n            {\n                setMessage(true);\n            }\n            else{\n                RegisterUser(username, password, setToken);\n                setMessage(false);\n            }\n        }\n        else{\n            LoginUser(username, password, setToken, setIncorrect);\n        }\n    } }>\n        {isLogin ? <div className = \"title\"><h1>Login</h1></div>: <div className = \"title\"><h1>Register</h1></div>}\n        <div className = \"mb-3\">\n            <label htmlFor = \"username\" className = \"form-label\"> UserName: </label>\n            <input id = \"username\" type = \"text\" className = \"form-control\" required=\"required\"/>\n        </div>\n        <div className = \"mb-3\"> \n            <label htmlFor = \"password\" className = \"form-label\"> Password: </label>\n            <input id = \"password\" type = \"password\" className = \"form-control\" required=\"required\"/>\n        </div>\n    \n        {isLogin ? null : <div className = \"mb-3\">\n            <label htmlFor = \"confirmPassword\" className = \"form-label\"> Confirm Password : </label>\n            <input id = \"confirmPassword\" type = \"password\" className = \"form-control\" required=\"required\"/>\n            </div>}\n        <input type = \"submit\"/>\n        {message ? <Message /> : null}\n        {incorrect ? <Incorrect />:null}\n\n    </form>\n}\n\nexport default Login;","import React from 'react';\nimport { getPosts } from './apiCalls';\nimport { makePost } from './apiCalls';\n\n\nconst CreatePost = ({token, history, setPosts, setPostsToDisplay}) => {\n    let title;\n    let description;\n    let price;\n    let location;\n    let willDeliver;\n    return<div>\n        <div className = \"title\"><h1>Create Post</h1></div>\n    {!!token ? <form onSubmit = {(e) => {\n        e.preventDefault();\n        if(!title || !description || !price ) console.log(\"Missing required fields\");\n        else{\n            \n            makePost(token, title, description, price, location, willDeliver);\n            getPosts(setPosts,token, setPostsToDisplay);\n            history.push(\"/posts\")\n        }\n    }}>\n        <div className = \"mb-3\">\n            <label className = \"form-label\">Title: </label>\n            <input type = \"text\" onChange = {(e) => {title = e.target.value;\n            e.target.value = title;\n            }} className = \"form-control\" required = \"required\"/>\n        </div>\n        <div className = \"mb-3\">\n            <label className = \"form-label\">Description: </label>\n            <textarea onChange = {(e) => {description = e.target.value;\n            e.target.value = description;}} className = \"form-control\" rows = \"3\" required = \"required\"/>\n        </div>\n        <div className = \"mb-3\">\n            <label className = \"form-label\">Price: </label>\n            <input type = \"text\" onChange = {(e) => {price = e.target.value;\n            e.target.value = price;}} className = \"form-control\" required = \"required\"/>\n        </div>\n        <div className = \"mb-3\">\n            <label className = \"form-label\">Location: </label>\n            <input type = \"text\" onChange = {(e) => {location = e.target.value;\n            e.target.value = location;}} className = \"form-control\"/>\n        </div>\n        <div className = \"mb-3\">\n            <label className = \"form-label\">WillDeliver</label>\n            <input type = \"checkbox\" onChange = {(e) => {willDeliver = e.target.checked;\n            e.target.checked = willDeliver;}} />\n        </div>\n        <input type = \"submit\" />\n    </form>: <p>You can only create posts when you are signed in.</p>}\n    </div>\n}\n\nexport default CreatePost;","import React, {useState} from 'react';\nimport { BaseUrl } from './constants';\n\n\nfunction postMatches(post, text) {\n    text = text.toLowerCase();\n    if(post.title.toLowerCase().includes(text))return true;\n    if(post.description.toLowerCase().includes(text)) return true;\n    return false;\n}\n\n\n\nconst Search = ({setSearchTerm,searchTerm, setPostsToDisplay, posts}) => {\n    let st = \"\";\n    return(\n        <form >\n            <label>Search:</label>\n            <input id = \"searchbox\"type = \"text\" onChange = {(e) => {\n                st = e.target.value;\n                e.target.value = st;\n                setSearchTerm(st);\n                const filteredPosts = posts.filter(post => postMatches(post, st));\n                setPostsToDisplay(searchTerm.length ? filteredPosts : posts)\n\n            }}/>\n            <button onClick = {() => { setSearchTerm(\"\");\n            setPostsToDisplay(posts);\n            document.getElementById(\"searchbox\").value = \"\";}}>Remove Filter</button>\n            {searchTerm ? <div>\n                <p> Posts filtered by term \"{searchTerm}\"</p>\n            </div>: null}\n        </form>\n    )\n}\n\nexport default Search;","import React, {useState, useEffect} from 'react'\nimport { getMyInfo } from './apiCalls';\nimport Post from './post';\n\n\nconst ViewMessage = ({message, id, token}) => {\n    const isMe = id === message.fromUser._id;\n    console.log(message.post);\n    if(isMe){\n    return( <div className = \"post\">\n        <p><b>Post: </b>{message.post.title}</p>\n        <p><b>Content: </b>{message.content}</p>\n    </div>)}\n    else return null;\n}\n\n\nconst Me = ({ token}) =>{\n   const [myInfo, setMyInfo] = useState({});\n   useEffect(() => {\n    if(token)getMyInfo(token, setMyInfo)\n   }, [token])\n   let data = myInfo.data;\n    return<div>\n        <div className = \"title\"><h1>Home</h1></div>\n        {myInfo.data? <div>\n            <p><b>Posts:</b></p>\n            {myInfo.data.posts.map((element, index) => {\n            return<Post key = {index} element = {element} token = {token} me = {true}/>})}\n            <p><b>Messages Sent: </b></p>\n            {myInfo.data.messages.map((element, index) => {\n            return<ViewMessage className = \"post\" key = {index} message = {element} id = {data._id} token = {token}/>})}\n        </div> : <p>You are not logged in.</p>}\n    </div>\n}\n\nexport default Me;","import React, {useEffect} from \"react\";\nimport { getPosts, editPost } from \"./apiCalls\";\nimport { BaseUrl } from \"./constants\";\n\nconst EditPost = ({token, history,match, setPosts, setPostsToDisplay, findPost, posts}) => {\n    let title;\n    let description;\n    let price;\n    let location;\n    let willDeliver;\n   \n    \n    const post = findPost(posts, match.params.postid);\n    if(post)\n    {\n    title = post.title;\n    description = post.description;\n    price = post.price;\n    location = post.location;\n    willDeliver = post.willDeliver;}\n   \n    return<div>\n        <div className = \"title\"><h1>Edit Post</h1></div>\n    <form onSubmit = {(e) => {\n        e.preventDefault();\n           editPost(match.params.postid, token, title, description, price, location, willDeliver);\n            getPosts(setPosts,token, setPostsToDisplay);\n            history.push(\"/posts\")\n        \n    }}>\n       <div className = \"mb-3\">\n            <label className = \"form-label\">Title: </label>\n            <input type = \"text\" defaultValue = {title} onChange = {(e) => { title = e.target.value;\n            e.target.value = title;\n            }} className = \"form-control\" required = \"required\"/>\n        </div>\n        <div className = \"mb-3\">\n            <label className = \"form-label\">Description: </label>\n            <textarea defaultValue = {description} onChange = {(e) => {description = e.target.value;\n            e.target.value = description;}} className = \"form-control\" rows = \"3\" required = \"required\"/>\n        </div>\n        <div className = \"mb-3\">\n            <label className = \"form-label\">Price: </label>\n            <input defaultValue = {price} type = \"text\" onChange = {(e) => {price = e.target.value;\n            e.target.value = price;}} className = \"form-control\" required = \"required\"/>\n        </div>\n        <div className = \"mb-3\">\n            <label className = \"form-label\">Location: </label>\n            <input type = \"text\" defaultValue = {location} onChange = {(e) => {location = e.target.value;\n            e.target.value = location;}} className = \"form-control\"/>\n        </div>\n        <div className = \"mb-3\">\n            <label className = \"form-label\">WillDeliver</label>\n            <input type = \"checkbox\" defaultChecked = {willDeliver} onChange = {(e) => {willDeliver = e.target.checked;\n            e.target.checked = willDeliver;}} />\n        </div>\n        <input type = \"submit\" />\n    </form>\n    </div>\n}\n\nexport default EditPost;","import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Post from './post.js';\nimport Login from './login.js';\nimport CreatePost from './createPost.js';\nimport Search from './search.js';\nimport Me from './me.js';\nimport EditPost from './edit.js';\nimport { getUserName, getPosts } from './apiCalls.js';\n\n\nfunction findPost(posts, id)\n{\n    return posts.find(element => element._id === id);\n}\n\nconst AlreadyIn = ({setToken}) =>{\n    return<div>\n        <div className = \"title\"><h1>LogOut</h1></div>\n        <p>You are logged in, would you like to log out?</p>\n        <button type = \"button\" onClick = {() => {\n            setToken(\"\");\n            localStorage.setItem(\"token\", \"\");}} >\n                Log out</button>\n    </div>\n}\n\n\n\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [token, setToken] = useState(\"\");\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [postsToDisplay, setPostsToDisplay] = useState([]);\n    const [username, setUsername] = useState(\"\");\n    useEffect(() => {\n        const t = localStorage.getItem(\"token\");\n        if(t) setToken(t);\n        getPosts(setPosts, t, setPostsToDisplay);\n        if(t)getUserName(token || t, setUsername);\n      \n    }, [token]);\n  return <Router >\n      {!!token ? <h1 className = \"greeting\" >Welcome {username}</h1> : <p>You are not signed in.</p>}\n      <nav className =\"navbar navbar-default gray-background\">\n         <div className=\"container\">\n            \n            { !!token ?<Link to = \"/\"> <button className = \"btn btn-default navbar-btn\">Home</button> </Link>: null}\n            <Link to = \"/posts\"> <button className = \"btn btn-default navbar-btn\" >Posts</button> </Link>\n            <Link to = \"/login\"> <button className = \"btn btn-default navbar-btn\">Login / Logout</button> </Link>\n            <Link to = \"/register\"> <button className = \"btn btn-default navbar-btn\">Register</button> </Link>\n            {!!token ? <Link to = \"/newpost\"> <button className = \"btn btn-default navbar-btn\">Make New Post</button> </Link>: null}\n            \n        </div>\n      </nav>\n      <Route path = \"/posts\" render = {  (routeProps) => <div>\n      <div className = \"title\"><h1>Posts</h1></div>\n        <Search setSearchTerm = {setSearchTerm} searchTerm = {searchTerm} setPostsToDisplay = {setPostsToDisplay} posts = {posts}/>\n        {postsToDisplay.map((element, index) => {\n            return<Post key = {index} element = {element} token = {token} setPosts = {setPosts} setPostsToDisplay = {setPostsToDisplay} username = {username} {...routeProps}/>})}\n      </div>}/>\n          \n      <Route path = \"/login\">\n         { !!token ? <AlreadyIn setToken = {setToken}/> : <Login mode = \"login\" setToken = {setToken} />}\n        </Route>\n      <Route path = \"/register\">\n          {!!token ? <AlreadyIn setToken = {setToken}/> : <Login mode = \"register\" setToken = {setToken}/>}\n        </Route>\n      <Route path = \"/newpost\" render = {(routeProps)=> \n        <CreatePost token = {token} {...routeProps} setPosts = {setPosts} setPostsToDisplay = {setPostsToDisplay}/>\n        }/>\n      <Route exact path = \"/\" render = {(routeProps) => <Me  {...routeProps} token = {token}/>}/>\n      <Route path = \"/edit/:postid\" render = {(routeProps) => <EditPost  {...routeProps} token = {token} setPosts = {setPosts} setPostsToDisplay = {setPostsToDisplay} posts = {posts} findPost = {findPost}/>}/>\n      \n  </Router>\n}\nReactDOM.render(\n  <App />,\n  document.getElementById('app'),\n);"],"sourceRoot":""}